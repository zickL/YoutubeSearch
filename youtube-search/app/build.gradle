/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.google.api-client:google-api-client:1.32.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.32.1'
    implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.google.http-client:google-http-client-jackson2:1.42.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.jooq:jooq:3.19.15'
    implementation 'org.jooq:jooq-meta:3.19.15'
    implementation 'org.jooq:jooq-codegen:3.19.15'
    implementation 'org.postgresql:postgresql:42.2.24'
    implementation fileTree(dir: 'src/main/java/org/example/generated', include: '*.java')
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:none"
}
